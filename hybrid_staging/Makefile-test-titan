SHELL   = /bin/sh
CC = cc 
CXX = CC
FTN = ftn

DSPACES_DIR=/ccs/home/zhangfan/dataspaces-hybrid-staging
HPGV_DIR=/ccs/home/zhangfan/ExaCT-titan/insitu_s3d_box/visualization/hpgv
FASTBIT_DIR=/ccs/home/zhangfan/install/fastbit
MEMQ_DIR=/ccs/home/zhangfan/software/memq

INCLUDES=-I. \
	-I$(DSPACES_DIR) \
	-I$(DSPACES_DIR)/include \
	-I$(DSPACES_DIR)/dart \
	-I$(DSPACES_DIR)/dart/gni \
	-I/opt/cray/rca/default/include \
	-I/opt/cray-hss-devel/6.0.0/include     \
	-I/opt/cray/krca/1.0.0-2.0400.29855.4.28.gem/include \
    -I$(HPGV_DIR) \
    -I$(FASTBIT_DIR)/win -I$(FASTBIT_DIR)/include \
    -I$(MEMQ_DIR)

PMI_CFLAGS = $(shell pkg-config --cflags cray-pmi)
PMI_LIBS = $(shell pkg-config --libs cray-pmi)
UGNI_CFLAGS = $(shell pkg-config --cflags cray-ugni)
UGNI_LIBS = $(shell pkg-config --libs cray-ugni)

LIBS= -L./ -lhstaging \
	-L$(DSPACES_DIR)/src -ldspaces -ldscommon \
	-L$(DSPACES_DIR)/dart -ldart \
	${PMI_LIBS} ${UGNI_LIBS} \
	-L/opt/cray/rca/default/lib64 -lrca \
    -L$(HPGV_DIR) -lhpgv \
    -L$(MEMQ_DIR) -lmemq \
    -L$(FASTBIT_DIR)/lib -Wl,-rpath=$(FASTBIT_DIR)/lib -lfastbit -lrt -lm

CFLAGS= -g ${UGNI_CFLAGS} ${PMI_CLFASG} -DDEBUG -DDS_HAVE_DIMES -DDS_HAVE_HYBRID_STAGING

SRC = common.c hstaging_partition.c dummy_simulation_worker.c dummy_staging_worker.c
SRC2 = scheduler_driver.c
SRC4 = simulation_driver.c
SRC5 = insitu_staging_driver.c 
SRC6 = intransit_staging_driver.c 
SRC7 = dag_executor.c
SRC8 = dag_submitter.c

OBJ = $(SRC:.c=.o)
OBJ2 = $(SRC2:.c=.o)
OBJ4 = $(SRC4:.c=.o)
OBJ5 = $(SRC5:.c=.o)
OBJ6 = $(SRC6:.c=.o)
OBJ7 = $(SRC7:.c=.o)
OBJ8 = $(SRC8:.c=.o)

OUT2 = ./scheduler_driver
OUT4 = ./simulation_driver
OUT5 = ./insitu_staging_driver
OUT6 = ./intransit_staging_driver
OUT7 = ./dag_executor
OUT8 = ./dag_submitter

default: $(OUT2) $(OUT4) $(OUT5) $(OUT6) $(OUT7) $(OUT8)

.c.o:
	$(CC) $(INCLUDES) $(CFLAGS) -c $< -o $@

$(OUT2): $(OBJ2) $(OBJ)
	$(CXX) $(CFLAGS) $(INCLUDES) $(OBJ2) $(OBJ) -o $(OUT2) $(LIBS)

$(OUT4): $(OBJ4) $(OBJ)
	$(CXX) $(CFLAGS) $(INCLUDES) $(OBJ4) $(OBJ) -o $(OUT4) $(LIBS)

$(OUT5): $(OBJ5) $(OBJ)
	$(CXX) $(CFLAGS) $(INCLUDES) $(OBJ5) $(OBJ) -o $(OUT5) $(LIBS)

$(OUT6): $(OBJ6) $(OBJ)
	$(CXX) $(CFLAGS) $(INCLUDES) $(OBJ6) $(OBJ) -o $(OUT6) $(LIBS)

$(OUT7): $(OBJ7) $(OBJ)
	$(CXX) $(CFLAGS) $(INCLUDES) $(OBJ7) $(OBJ) -o $(OUT7) $(LIBS)

$(OUT8): $(OBJ8) $(OBJ)
	$(CXX) $(CFLAGS) $(INCLUDES) $(OBJ8) $(OBJ) -o $(OUT8) $(LIBS)

clean:
	rm -f $(OBJ) $(OBJ2) $(OBJ4) $(OBJ5) $(OBJ6) $(OBJ7) $(OBJ8) $(OUT2) $(OUT4) $(OUT5) $(OUT6) $(OUT7) $(OUT8)


