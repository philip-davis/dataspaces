BOXLIB_HOME ?= ../../../..
ADR_DIR  ?= $(BOXLIB_HOME)/Tutorials/AMR_Advection_C

TOP := $(ADR_DIR)

NETWORK_HOME ?= $(TOP)/Networks

EBASE     = ADR

EXTERN_CORE :=

include $(BOXLIB_HOME)/Tools/C_mk/Make.defs

ifeq ($(USE_REACT), TRUE)
  DEFINES += -DREACTIONS
endif

ifeq ($(USE_DIFFUSION), TRUE)
  DEFINES += -DDIFFUSION
endif

all: $(executable) 
	$(SILENT) $(RM) buildInfo.cpp
	@echo SUCCESS

Bdirs 	:= Source Source/Src_$(DIM)d
Pdirs 	:= C_BaseLib C_AMRLib C_BoundaryLib 

Bpack	+= $(foreach dir, $(Pdirs), $(BOXLIB_HOME)/Src/$(dir)/Make.package)
Blocs	+= $(foreach dir, $(Pdirs), $(BOXLIB_HOME)/Src/$(dir))

Bpack	+= $(foreach dir, $(Bdirs), $(TOP)/$(dir)/Make.package)
Blocs	+= $(foreach dir, $(Bdirs), $(TOP)/$(dir))

include $(Bpack)

INCLUDE_LOCATIONS += $(Blocs)
VPATH_LOCATIONS   += $(Blocs)

USE_MG = FALSE

ifeq ($(USE_DIFFUSION), TRUE)
  USE_MG = TRUE
endif
   
ifeq ($(USE_MG), TRUE)
  include $(BOXLIB_HOME)/Src/LinearSolvers/C_to_F_MG/Make.package
  INCLUDE_LOCATIONS += $(BOXLIB_HOME)/Src/LinearSolvers/C_to_F_MG
  VPATH_LOCATIONS   += $(BOXLIB_HOME)/Src/LinearSolvers/C_to_F_MG

  include $(BOXLIB_HOME)/Src/LinearSolvers/F_MG/FParallelMG.mak
  INCLUDE_LOCATIONS += $(BOXLIB_HOME)/Src/LinearSolvers/F_MG
  VPATH_LOCATIONS   += $(BOXLIB_HOME)/Src/LinearSolvers/F_MG
endif

include $(BOXLIB_HOME)/Src/F_BaseLib/FParallelMG.mak
INCLUDE_LOCATIONS += $(BOXLIB_HOME)/Src/F_BaseLib
VPATH_LOCATIONS   += $(BOXLIB_HOME)/Src/F_BaseLib

# runtime parameter support for extern/ routines
f90EXE_sources += extern.f90

EXTERN_TEMPLATE := $(TOP)/Source/extern_probin.template

EXTERN_PARAMETERS := $(shell $(BOXLIB_HOME)/Tools/F_scripts/findparams.py $(EXTERN_CORE))

extern.f90: $(EXTERN_PARAMETERS) $(EXTERN_TEMPLATE)
	$(BOXLIB_HOME)/Tools/F_scripts/write_probin.py \
           -t $(EXTERN_TEMPLATE) -o extern.f90 -n extern \
           --pa "$(EXTERN_PARAMETERS)" 

# job_info support
CEXE_sources += buildInfo.cpp
CEXE_headers += $(BOXLIB_HOME)/Tools/C_scripts/buildInfo.H
INCLUDE_LOCATIONS +=  $(BOXLIB_HOME)/Tools/C_scripts

buildInfo.cpp: $(BOXLIB_HOME)/Tools/C_scripts/make_build_info_cpp
	$(BOXLIB_HOME)/Tools/C_scripts/make_build_info_cpp "$(BOXLIB_HOME)" \
            "$(COMP)" "$(FCOMP)" \
            "GIT=$(TOP)" "GIT=$(BOXLIB_HOME)" "GIT=$(ASTRODEV_DIR)" 


vpath %.c   . $(VPATH_LOCATIONS)
vpath %.cpp . $(VPATH_LOCATIONS)
vpath %.h   . $(VPATH_LOCATIONS)
vpath %.H   . $(VPATH_LOCATIONS)
vpath %.F   . $(VPATH_LOCATIONS)
vpath %.f90 . $(VPATH_LOCATIONS)
vpath %.f   . $(VPATH_LOCATIONS)
vpath %.fi  . $(VPATH_LOCATIONS)


include $(BOXLIB_HOME)/Tools/C_mk/Make.rules

clean::
	$(SILENT) $(RM) extern.f90
	$(SILENT) $(RM) buildInfo.cpp
